version: '3.8'

services:
  app:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: finfinity_portal_app
    restart: unless-stopped
    working_dir: /var/www/html
    volumes:
      - ./:/var/www/html
      - ./storage/app:/var/www/html/storage/app
      - ./storage/logs:/var/www/html/storage/logs
    ports:
      - "8080:80"
    environment:
      - APP_ENV=production
      - APP_DEBUG=false
    depends_on:
      - db
      - redis
    networks:
      - finfinity_network

  db:
    image: mysql:8.0
    container_name: finfinity_portal_db
    restart: unless-stopped
    environment:
      MYSQL_DATABASE: ${DB_DATABASE:-finfinity_portal}
      MYSQL_ROOT_PASSWORD: ${DB_PASSWORD:-secret}
      MYSQL_USER: ${DB_USERNAME:-laravel}
      MYSQL_PASSWORD: ${DB_PASSWORD:-secret}
    volumes:
      - db_data:/var/lib/mysql
      - ./database/init.sql:/docker-entrypoint-initdb.d/init.sql:ro
    ports:
      - "3306:3306"
    networks:
      - finfinity_network

  redis:
    image: redis:7-alpine
    container_name: finfinity_portal_redis
    restart: unless-stopped
    volumes:
      - redis_data:/data
    ports:
      - "6379:6379"
    networks:
      - finfinity_network

  nginx:
    image: nginx:alpine
    container_name: finfinity_portal_nginx
    restart: unless-stopped
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./:/var/www/html
      - ./docker/nginx/nginx.conf:/etc/nginx/conf.d/default.conf
      - ./docker/nginx/ssl:/etc/nginx/ssl
    depends_on:
      - app
    networks:
      - finfinity_network

  # Optional: For development with hot reload
  node:
    image: node:18-alpine
    container_name: finfinity_portal_node
    restart: unless-stopped
    working_dir: /var/www/html
    volumes:
      - ./:/var/www/html
    command: sh -c "npm install && npm run dev"
    ports:
      - "5173:5173"
    networks:
      - finfinity_network
    profiles:
      - development

volumes:
  db_data:
    driver: local
  redis_data:
    driver: local

networks:
  finfinity_network:
    driver: bridge 